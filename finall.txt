-- potraviny dle kvartalu

create or replace view potraviny_dle_kvartalu as
select  cpc.name potravina,
		cp.value cena,
		cpc.price_value mnozstvi,
		cpc.price_unit jednotka,
		cr.name lokalita,
		cr.code kod_lokality,
		cp.date_from datum_od,
		cp.date_to datum_do,
		YEAR(cp.date_from) AS year,
	    CASE 
	        WHEN MONTH(cp.date_from) BETWEEN 1 AND 3 THEN 1
	        WHEN MONTH(cp.date_from) BETWEEN 4 AND 6 THEN 2
	        WHEN MONTH(date_from) BETWEEN 7 AND 9 THEN 3
	        WHEN MONTH(date_from) BETWEEN 10 AND 12 THEN 4
	    END AS quarter
from czechia_price cp 
left join czechia_price_category cpc 
	on cp.category_code = cpc.code 
left join czechia_region cr 
	on cp.region_code = cr.code;
	
-- Potraviny dle let
create or replace view potraviny_dle_let as
select potravina,
	   avg(cena) prumerna_cena_za_rok,
	   mnozstvi,
	   jednotka,
	   lokalita,
	   year
from potraviny_dle_kvartalu p 
group by potravina, year, lokalita
order by potravina, year, lokalita;

select * from potraviny_dle_let;

-- Prumerna mza 

CREATE OR REPLACE VIEW prumerna_mzda_quartal as
select cpib.name obor,
		cp.value prumerna_mzda, 
		cpu.name Kc,
		cp.payroll_year year,
		cp.payroll_quarter kvartal
from czechia_payroll cp 
join czechia_payroll_calculation cpc 
	on cp.calculation_code = cpc.code 
left join czechia_payroll_industry_branch cpib 
	on cp.industry_branch_code = cpib.code 
left join czechia_payroll_value_type cpvt 
	on cp.value_type_code = cpvt.code 
left join czechia_payroll_unit cpu 
	on cp.unit_code = cpu.code 
where cp.value_type_code = 5958 and cp.value is not null;

-- Prumerna mzda za dostupe roky
create or replace view prumerna_mzda_roky as
SELECT obor,
       AVG(prumerna_mzda) AS prumerna_mzda,
       year
FROM prumerna_mzda_quartal
GROUP BY obor, year;

-- Vysledek create or replace table t_karel_minarcik_project_SQL_primary_final
create or replace table t_karel_minarcik_project_SQL_primary_final
select obor,
	   prumerna_mzda,
	   pmr.year rok,
	   potravina,
	   prumerna_cena_za_rok,
	   mnozstvi,
	   jednotka,
	   lokalita
from  potraviny_dle_let pdl
left join prumerna_mzda_roky pmr
	on pmr.`year` = pdl.`year` ;

-- Otazka cislo 2 
select rok,
	   prumerna_mzda,
	   potravina,
	   prumerna_cena_za_rok,
	   round(prumerna_mzda/prumerna_cena_za_rok) as pocet_produktu_za_mzdu
from t_karel_minarcik_project_sql_primary_final tkmpspf
where lokalita is null
	and rok in (2006, 2018)
	and (potravina = "mléko polotučné pasterované" or potravina = "chléb konzumní kmínový")
	and obor is null
group by potravina, prumerna_mzda;

result =
2006	19218.8750	Chléb konzumní kmínový		16.1234			1192.0
2018	31520.5000	Chléb konzumní kmínový		24.238333333333333	1300.0
2006	19218.8750	Mléko polotučné pasterované	14.437999999999999	1331.0
2018	31520.5000	Mléko polotučné pasterované	19.819166666666664	1590.0


-- Otazka cislo 1
create or replace view salary_grow as
SELECT obor,
       rok,
       prumerna_mzda posledni_rok_mzda,
       LAG(prumerna_mzda, 12) OVER (PARTITION BY obor ORDER BY rok) AS prvni_rok_mzda,
       (prumerna_mzda - LAG(prumerna_mzda, 12) OVER (PARTITION BY obor ORDER BY rok)) AS difference
FROM t_karel_minarcik_project_sql_primary_final
where obor is not null
group by prumerna_mzda 
ORDER BY obor, rok;

select * from salary_grow
where difference is not null;

result = ano, mzdy ve vsech odvetvich rostou v prubehu analyzovanych let.


-- otazka c 3

WITH price_changes AS (
    SELECT potravina,
           rok,
           prumerna_cena_za_rok,
           LAG(prumerna_cena_za_rok, 1) OVER (PARTITION BY potravina ORDER BY rok) AS previous_year_price,
           ROUND((prumerna_cena_za_rok - LAG(prumerna_cena_za_rok, 1) OVER (PARTITION BY potravina ORDER BY rok)) 
                 / LAG(prumerna_cena_za_rok, 1) OVER (PARTITION BY potravina ORDER BY rok) * 100, 2) AS percentage_change
    FROM t_karel_minarcik_project_sql_primary_final tkmpspf
)
, average_price_growth AS (
    SELECT potravina,
           AVG(percentage_change) AS avg_percentage_growth
    FROM price_changes
    WHERE percentage_change IS NOT NULL -- Exclude rows where there is no previous year
    GROUP BY potravina
)
SELECT potravina, avg_percentage_growth
FROM average_price_growth
ORDER BY avg_percentage_growth ASC
LIMIT 1;

result = Cukr krystalový	0.000772



--otazka c 4

with food_percentage_change AS(
	SELECT potravina,
           rok,
           prumerna_cena_za_rok,
           lokalita,
           LAG(prumerna_cena_za_rok, 1) OVER (PARTITION BY potravina ORDER BY rok) AS previous_year_price,
           ROUND((prumerna_cena_za_rok - LAG(prumerna_cena_za_rok, 1) OVER (PARTITION BY potravina ORDER BY rok)) 
                 / LAG(prumerna_cena_za_rok, 1) OVER (PARTITION BY potravina ORDER BY rok) * 100, 2) AS percentage_change
    FROM t_karel_minarcik_project_sql_primary_final tkmpspf
),
food_avg_change AS (
    SELECT rok,
           AVG(percentage_change) AS avg_percentage_change_per_year
    FROM food_percentage_change
    WHERE lokalita IS NULL
      AND percentage_change IS NOT NULL
      AND percentage_change <> 0
    GROUP BY rok
),
payroll_percentage_change AS (
    SELECT year AS rok,
           prumerna_mzda,
           LAG(prumerna_mzda, 1) OVER (ORDER BY year) AS previous_year_salary,
           ROUND((prumerna_mzda - LAG(prumerna_mzda, 1) OVER (ORDER BY year)) 
                 / LAG(prumerna_mzda, 1) OVER (ORDER BY year) * 100, 2) AS payroll_percentage_change
    FROM prumerna_mzda_roky
    WHERE obor IS NULL
)
SELECT fac.rok,
       fac.avg_percentage_change_per_year AS food_percentage_change,
       ppc.payroll_percentage_change,
       abs(fac.avg_percentage_change_per_year - ppc.payroll_percentage_change) as difference_food_vs_payroll
FROM food_avg_change fac
LEFT JOIN payroll_percentage_change ppc
ON fac.rok = ppc.rok
ORDER BY fac.rok;



-- druha tabulka 

create or replace table t_karel_minarcik_project_sql_secondary_final (
WITH all_economies AS (
    SELECT country,
           year,
           GDP,
           population,
           gini
    FROM economies e
    WHERE year BETWEEN 2006 AND 2018
),
europian_region AS (
    SELECT country,
           region
    FROM religions
    WHERE region = 'Europe'
)
SELECT ae.country,
	   ae.year,
	   ae.GDP,
	   ae.population,
	   ae.gini
FROM all_economies ae
right JOIN europian_region er
    ON er.country = ae.country
WHERE er.region IS NOT null
group by ae.year, er.country
order by er.country, ae.year
);



-- Otazka c.5
create or replace view correl as
with food_percentage_change AS(
	SELECT potravina,
           rok,
           prumerna_cena_za_rok,
           lokalita,
           LAG(prumerna_cena_za_rok, 1) OVER (PARTITION BY potravina ORDER BY rok) AS previous_year_price,
           ROUND((prumerna_cena_za_rok - LAG(prumerna_cena_za_rok, 1) OVER (PARTITION BY potravina ORDER BY rok)) 
                 / LAG(prumerna_cena_za_rok, 1) OVER (PARTITION BY potravina ORDER BY rok) * 100, 2) AS percentage_change
    FROM t_karel_minarcik_project_sql_primary_final tkmpspf
),
food_avg_change AS (
    SELECT rok,
           AVG(percentage_change) AS avg_percentage_change_per_year
    FROM food_percentage_change
    WHERE lokalita IS NULL
      AND percentage_change IS NOT NULL
      AND percentage_change <> 0
    GROUP BY rok
),
payroll_percentage_change AS (
    SELECT year AS rok,
           prumerna_mzda,
           LAG(prumerna_mzda, 1) OVER (ORDER BY year) AS previous_year_salary,
           ROUND((prumerna_mzda - LAG(prumerna_mzda, 1) OVER (ORDER BY year)) 
                 / LAG(prumerna_mzda, 1) OVER (ORDER BY year) * 100, 2) AS payroll_percentage_change
    FROM prumerna_mzda_roky
    WHERE obor IS NULL
),
gdp_change as (
select year,
	   GDP,
	   LAG(GDP, 1) OVER (ORDER BY year) AS previous_GDP,
           ROUND((GDP - LAG(GDP, 1) OVER (ORDER BY year)) 
                 / LAG(GDP, 1) OVER (ORDER BY year) * 100, 2) AS GDP_percentage_change
FROM t_karel_minarcik_project_sql_secondary_final
where country = "Czech Republic"
)
SELECT fac.rok as rok,
       fac.avg_percentage_change_per_year AS food_percentage_change,
       ppc.payroll_percentage_change,
       gc.GDP_percentage_change
FROM food_avg_change fac
LEFT JOIN payroll_percentage_change ppc
ON fac.rok = ppc.rok
left join gdp_change gc
on fac.rok = gc.year
ORDER BY fac.rok
;

select * from correl;


-- korelace payroll 
        
with correL_data_prepared as (
SELECT 
    rok,
    payroll_percentage_change,
    avg_payroll,
    payroll_percentage_change - avg_payroll AS avg_payroll_diff,
    GDP_percentage_change,
    avg_gdp,
    GDP_percentage_change - avg_gdp AS avg_gdp_diff
FROM 
    correl,
    (SELECT 
         AVG(payroll_percentage_change) AS avg_payroll, 
         AVG(GDP_percentage_change) AS avg_gdp 
     FROM 
         correl) AS avg_values
)
select 
	SUM(avg_payroll_diff * avg_gdp_diff) /
	SQRT(SUM(POWER(avg_gdp_diff, 2)) * SUM(POWER(avg_payroll_diff, 2)))
from correL_data_prepared;


-- korelace food 
        
with correL_food_data_prepared as (
SELECT 
    rok,
    food_percentage_change,
    avg_food,
    food_percentage_change - avg_food AS avg_food_diff,
    GDP_percentage_change,
    avg_gdp,
    GDP_percentage_change - avg_gdp AS avg_gdp_diff
FROM 
    correl,
    (SELECT 
         AVG(food_percentage_change) AS avg_food, 
         AVG(GDP_percentage_change) AS avg_gdp 
     FROM 
         correl) AS avg_values
)
select 
	SUM(avg_food_diff * avg_gdp_diff) /
	SQRT(SUM(POWER(avg_gdp_diff, 2)) * SUM(POWER(avg_food_diff, 2)))
from correL_food_data_prepared
;